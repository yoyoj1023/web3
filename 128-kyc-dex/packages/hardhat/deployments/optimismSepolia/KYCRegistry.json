{
  "address": "0xA68FC1c0bb5A11A90f5D620ef406a6B3b0a33368",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "UserVerificationRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "UserVerified",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "addVerifiedUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "removeVerifiedUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "verifiedUsers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x197a9de6e8ef20516ead02544c2f4a50a5852e50fd61c94d71e62fefce6c5c41",
  "receipt": {
    "to": null,
    "from": "0xdb4101e7f5E2cC0e1A749092ff5287e3d36A5df6",
    "contractAddress": "0xA68FC1c0bb5A11A90f5D620ef406a6B3b0a33368",
    "transactionIndex": 7,
    "gasUsed": "344318",
    "logsBloom": "0x
    "blockHash": "0x25fc1f10c3b6fc988535cadca3d63168ff0f4ecbf8ee76ddf99e16ed4f22a0a7",
    "transactionHash": "0x197a9de6e8ef20516ead02544c2f4a50a5852e50fd61c94d71e62fefce6c5c41",
    "logs": [
      {
        "transactionIndex": 7,
        "blockNumber": 28650899,
        "transactionHash": "0x197a9de6e8ef20516ead02544c2f4a50a5852e50fd61c94d71e62fefce6c5c41",
        "address": "0xA68FC1c0bb5A11A90f5D620ef406a6B3b0a33368",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000db4101e7f5e2cc0e1a749092ff5287e3d36a5df6"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0x25fc1f10c3b6fc988535cadca3d63168ff0f4ecbf8ee76ddf99e16ed4f22a0a7"
      }
    ],
    "blockNumber": 28650899,
    "cumulativeGasUsed": "838923",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ca343bbcd8d5d1ae27149d3490c9a504",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserVerificationRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserVerified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"addVerifiedUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"removeVerifiedUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"verifiedUsers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KYCRegistry.sol\":\"KYCRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/KYCRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract KYCRegistry is Ownable {\\r\\n    mapping(address => bool) public verifiedUsers;\\r\\n\\r\\n    constructor() Ownable(msg.sender) {}\\r\\n\\r\\n    event UserVerified(address indexed user);\\r\\n    event UserVerificationRemoved(address indexed user);\\r\\n\\r\\n    function addVerifiedUser(address user) external onlyOwner {\\r\\n        require(user != address(0), \\\"KYCRegistry: Invalid user address\\\");\\r\\n        require(!verifiedUsers[user], \\\"KYCRegistry: User already verified. Do not add again.\\\");\\r\\n        verifiedUsers[user] = true;\\r\\n        emit UserVerified(user);\\r\\n    }\\r\\n\\r\\n    function removeVerifiedUser(address user) external onlyOwner {\\r\\n        require(user != address(0), \\\"KYCRegistry: Invalid user address\\\");\\r\\n        require(verifiedUsers[user], \\\"KYCRegistry: User not verified now. Do not remove again.\\\");\\r\\n        verifiedUsers[user] = false; // delete verifiedUsers[user];\\r\\n        emit UserVerificationRemoved(user);\\r\\n    }\\r\\n\\r\\n    function isVerified(address user) external view returns (bool) {\\r\\n        return verifiedUsers[user];\\r\\n    }\\r\\n\\r\\n    // \\u6279\\u91cf\\u64cd\\u4f5c\\u53ef\\u4ee5\\u5f8c\\u7e8c\\u6dfb\\u52a0\\r\\n}\",\"keccak256\":\"0x4be7b5008208a0599df5d8983e204fdbd50a283c7c51425b0199d59f162c378d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104cc806100a56000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b2578063b9209e33146100d2578063e35fe3661461010e578063f2fde38b1461013157600080fd5b806325cb98d514610082578063715018a61461009757806388e3c5d61461009f575b600080fd5b610095610090366004610425565b610144565b005b610095610252565b6100956100ad366004610425565b610266565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100fe6100e0366004610425565b6001600160a01b031660009081526001602052604090205460ff1690565b60405190151581526020016100c9565b6100fe61011c366004610425565b60016020526000908152604090205460ff1681565b61009561013f366004610425565b61036a565b61014c6103a8565b6001600160a01b03811661017b5760405162461bcd60e51b815260040161017290610455565b60405180910390fd5b6001600160a01b03811660009081526001602052604090205460ff166102095760405162461bcd60e51b815260206004820152603860248201527f4b594352656769737472793a2055736572206e6f74207665726966696564206e60448201527f6f772e20446f206e6f742072656d6f766520616761696e2e00000000000000006064820152608401610172565b6001600160a01b038116600081815260016020526040808220805460ff19169055517fa5f623400231cb3631948a2c0651d2d7090bbefbbed5ac8b79b47f831db4915a9190a250565b61025a6103a8565b61026460006103d5565b565b61026e6103a8565b6001600160a01b0381166102945760405162461bcd60e51b815260040161017290610455565b6001600160a01b03811660009081526001602052604090205460ff161561031b5760405162461bcd60e51b815260206004820152603560248201527f4b594352656769737472793a205573657220616c72656164792076657269666960448201527432b217102237903737ba1030b2321030b3b0b4b71760591b6064820152608401610172565b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa6625d2d26e786e2f473111bea4b2fcdbbf1863d883a2359989ce3a103d2972a9190a250565b6103726103a8565b6001600160a01b03811661039c57604051631e4fbdf760e01b815260006004820152602401610172565b6103a5816103d5565b50565b6000546001600160a01b031633146102645760405163118cdaa760e01b8152336004820152602401610172565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561043757600080fd5b81356001600160a01b038116811461044e57600080fd5b9392505050565b60208082526021908201527f4b594352656769737472793a20496e76616c69642075736572206164647265736040820152607360f81b60608201526080019056fea264697066735822122015eee244b0532fbe4d562d56110062f3d12e46a31206436ac5a788d503c8574b64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b2578063b9209e33146100d2578063e35fe3661461010e578063f2fde38b1461013157600080fd5b806325cb98d514610082578063715018a61461009757806388e3c5d61461009f575b600080fd5b610095610090366004610425565b610144565b005b610095610252565b6100956100ad366004610425565b610266565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100fe6100e0366004610425565b6001600160a01b031660009081526001602052604090205460ff1690565b60405190151581526020016100c9565b6100fe61011c366004610425565b60016020526000908152604090205460ff1681565b61009561013f366004610425565b61036a565b61014c6103a8565b6001600160a01b03811661017b5760405162461bcd60e51b815260040161017290610455565b60405180910390fd5b6001600160a01b03811660009081526001602052604090205460ff166102095760405162461bcd60e51b815260206004820152603860248201527f4b594352656769737472793a2055736572206e6f74207665726966696564206e60448201527f6f772e20446f206e6f742072656d6f766520616761696e2e00000000000000006064820152608401610172565b6001600160a01b038116600081815260016020526040808220805460ff19169055517fa5f623400231cb3631948a2c0651d2d7090bbefbbed5ac8b79b47f831db4915a9190a250565b61025a6103a8565b61026460006103d5565b565b61026e6103a8565b6001600160a01b0381166102945760405162461bcd60e51b815260040161017290610455565b6001600160a01b03811660009081526001602052604090205460ff161561031b5760405162461bcd60e51b815260206004820152603560248201527f4b594352656769737472793a205573657220616c72656164792076657269666960448201527432b217102237903737ba1030b2321030b3b0b4b71760591b6064820152608401610172565b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fa6625d2d26e786e2f473111bea4b2fcdbbf1863d883a2359989ce3a103d2972a9190a250565b6103726103a8565b6001600160a01b03811661039c57604051631e4fbdf760e01b815260006004820152602401610172565b6103a5816103d5565b50565b6000546001600160a01b031633146102645760405163118cdaa760e01b8152336004820152602401610172565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561043757600080fd5b81356001600160a01b038116811461044e57600080fd5b9392505050565b60208082526021908201527f4b594352656769737472793a20496e76616c69642075736572206164647265736040820152607360f81b60608201526080019056fea264697066735822122015eee244b0532fbe4d562d56110062f3d12e46a31206436ac5a788d503c8574b64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/KYCRegistry.sol:KYCRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 186,
        "contract": "contracts/KYCRegistry.sol:KYCRegistry",
        "label": "verifiedUsers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}